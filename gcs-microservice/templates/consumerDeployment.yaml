apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gcs-microservice.fullname" . }}-consumer
  namespace: argo
  labels:
    {{- include "gcs-microservice.labels" . | nindent 4 }}
    component: consumer 
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "gcs-microservice.fullname" . }}
      component: consumer
  template:
    metadata:
      labels:
        {{- include "gcs-microservice.labels" . | nindent 8 }}
        component: consumer
    spec:
      initContainers:
        - name: consumer-init
          image: busybox
          command: ["sh", "-c", "mkdir -p /app/data/inbox-data && chown -R 1000:1000 /app/data/inbox-data"]
          volumeMounts:
            - name: shared-data
              mountPath: /app/data/inbox-data
            
            - name: gcp-key
              mountPath: /var/secrets/google
              readOnly: true
 
      containers:
        - name: kafka-consumer
          image: "{{ .Values.kafkaSidecars.image.repository }}:{{ .Values.kafkaSidecars.image.tag }}"
          imagePullPolicy: {{ .Values.kafkaSidecars.image.pullPolicy }}
          securityContext:
            runAsUser: 1000  
            runAsGroup: 1000
          env:
            - name: RUN_MODE
              value: "consumer"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/var/secrets/google/key.json"
            {{- range $key, $value := .Values.kafkaSidecars.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: shared-data
              mountPath: /app/data/inbox-data
    
          resources:
            {{- toYaml .Values.kafkaSidecars.resources | nindent 12 }}

      volumes:
        - name: gcp-key
          secret:
            secretName: {{ .Values.kafkaSidecars.gcs.existingSecret }}
            items:
              - key: {{ .Values.kafkaSidecars.gcs.secretKey }}
                path: key.json
        
        - name: shared-data
          persistentVolumeClaim:
            claimName: data-consumer-pvc

