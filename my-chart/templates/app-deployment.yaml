apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-python-app
  labels:
    app: my-python-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-python-app
  template:
    metadata:
      labels:
        app: my-python-app
    spec:
      serviceAccountName: spark
      containers:
        - name: my-python-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Never
          ports:
            - containerPort: 4040
              name: spark-ui
            - containerPort: 7078
              name: spark-driver
            - containerPort: 5000
              name: flask-ui
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 4040
            initialDelaySeconds: 20  # Extra time for Spark to initialize
            periodSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 4040
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: PYSPARK_PYTHON
              value: /opt/venv/bin/python
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: JAVA_HOME
              value: "/opt/java/openjdk"
            - name: HADOOP_HOME
              value: "/opt/hadoop"
            - name: HADOOP_CONF_DIR
              value: "/opt/hadoop/etc/hadoop"
            - name: SPARK_HOME
              value: "/opt/spark"
            - name: SPARK_LOCAL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: STARTUP_COMMAND
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: startup-command

            # ✅ MongoDB Configuration
            - name: MONGO_DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.connectionUri.secretName }}
                  key: {{ .Values.mongodb.connectionUri.secretKey }}
 #mongodb+srv://kumardahal536:Seu5paHzKgMMFwAN@cluster0.oh3gzuw.mongodb.net/
            # ✅ SQL Server Configuration
            - name: SQL_SERVER_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sqlserver.host.secretName }}
                  key: {{ .Values.sqlserver.host.secretKey }}
            - name: SQL_SERVER_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sqlserver.port.secretName }}
                  key: {{ .Values.sqlserver.port.secretKey }}
            - name: SQL_SERVER_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sqlserver.database.secretName }}
                  key: {{ .Values.sqlserver.database.secretKey }}
            - name: SQL_SERVER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sqlserver.username.secretName }}
                  key: {{ .Values.sqlserver.username.secretKey }}
            - name: SQL_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sqlserver.password.secretName }}
                  key: {{ .Values.sqlserver.password.secretKey }}
            - name: SQL_SERVER_TABLE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sqlserver.table.secretName }}
                  key: {{ .Values.sqlserver.table.secretKey }}

          volumeMounts:
            - name: spark-storage
              mountPath: /app/artifact  # ✅ Keeps Python paths intact
            - name: config-volume
              mountPath: /app/config
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          command: ["/bin/sh", "-c"]
          args:
            - $(STARTUP_COMMAND)
      volumes:
        - name: spark-storage
          persistentVolumeClaim:
            claimName: spark-data-pvc
        - name: config-volume
          configMap:
            name: app-config
