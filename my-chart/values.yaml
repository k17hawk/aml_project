replicaCount: 1

image:
  repository: mypyspark
  tag: latest
  pullPolicy: IfNotPresent

sqlserver:
  host:
    secretName: "db-secrets"
    secretKey: "host"  
  port:
    secretName: "db-secrets"
    secretKey: "port"  
  database:
    secretName: "db-secrets"
    secretKey: "database" 
  username:
    secretName: "db-secrets"
    secretKey: "username" 
  password:
    secretName: "db-secrets"
    secretKey: "password" 
  table:
    secretName: "db-secrets"
    secretKey: "table" 


mongodb:
  connectionUri:
    secretName: "db-secrets"
    secretKey: "mongodb"
  auth:
    enabled: false
  service:
    type: ClusterIP
    port: 27017

service:
  type: ClusterIP
  port: 80
  targetPort: 5000

serviceAccount:
  create: true  
  name: "spark"

rbac:
  create: true  
  roleName: "spark-role"
  roleBindingName: "spark-role-binding"


ingress:
  enabled: false

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

resources:
  limits:
    memory: "8Gi" 
    cpu: "2"       
  requests:
    memory: "6Gi" 
    cpu: "2"       

pipelines:
  - name: ingestion
    script: "ingestion_pipeline.py"
    dependencies: []
  - name: validation
    script: "validation_pipeline.py"
    dependencies: ["ingestion"]
  - name: transformation
    script: "transformation_pipeline.py"
    dependencies: ["validation"]
  - name: training
    script: "training_pipeline.py"
    dependencies: ["transformation"]
  - name: evaluation
    script: "evaluation_pipeline.py"
    dependencies: ["training"]
  - name: pusher
    script: "pusher_pipeline.py"
    dependencies: ["evaluation"]
  - name: file_watcher
    script: "file_watcher.py"
    dependencies: []

env:
  - name: MONGO_DB_URL
    valueFrom:
      secretKeyRef:
        name: db-secrets
        key: mongodb

tolerations: []
nodeSelector: {}
affinity: {}

config:
  enabled: true
