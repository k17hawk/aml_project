apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-pyspark
  labels:
    app: pyspark
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: pyspark
  template:
    metadata:
      labels:
        app: pyspark
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: pyspark-container
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
            - containerPort: 4040
              name: spark-ui
            - containerPort: 7078
              name: spark-driver
            - containerPort: 5000
              name: flask-ui
              protocol: TCP
        readinessProbe:
            httpGet:
              path: /
              port: 4040
            initialDelaySeconds: 20 
            periodSeconds: 5
            failureThreshold: 3
        livenessProbe:
            httpGet:
              path: /
              port: 4040
            initialDelaySeconds: 30
            periodSeconds: 10
        env:
        # SQL Server Configuration
        - name: SQL_SERVER_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sqlserver.host.secretName }}
              key: {{ .Values.sqlserver.host.secretKey }}
        - name: SQL_SERVER_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sqlserver.port.secretName }}
              key: {{ .Values.sqlserver.port.secretKey }}
        - name: SQL_SERVER_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sqlserver.database.secretName }}
              key: {{ .Values.sqlserver.database.secretKey }}
        - name: SQL_SERVER_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sqlserver.username.secretName }}
              key: {{ .Values.sqlserver.username.secretKey }}
        - name: SQL_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sqlserver.password.secretName }}
              key: {{ .Values.sqlserver.password.secretKey }}
        - name: SQL_SERVER_TABLE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.sqlserver.table.secretName }}
              key: {{ .Values.sqlserver.table.secretKey }}
        # MongoDB Configuration
        - name: MONGO_DB_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongodb.connectionUri.secretName }}
              key: {{ .Values.mongodb.connectionUri.secretKey }}
        volumeMounts:
        - name: spark-config
          mountPath: /app/config
        - name: spark-storage
          mountPath: /app/artifact
      volumes:
      - name: spark-config
        configMap:
          name: {{ .Release.Name }}-config
      restartPolicy: {{ .Values.job.restartPolicy }}