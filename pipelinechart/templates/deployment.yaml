---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-new
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: my-app-new
  template:
    metadata:
      labels:
        app: my-app-new
    spec:
      serviceAccountName: "{{ .Values.serviceAccount.name }}"  
      containers:
        - name: my-app-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"

          command: ["/bin/bash", "-c"]
          args:
            - "pip install --no-cache-dir -r /app/config/requirements.txt &&python /app/${PIPELINE_SCRIPT}"

          env:
            - name: SQL_SERVER
              value: "{{ .Values.sqlserver.host }},{{ .Values.sqlserver.port }}"
            - name: SQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.sqlserver.database.secretName }}"
                  key: "{{ .Values.sqlserver.database.secretKey }}"
            - name: SQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.sqlserver.username.secretName }}"
                  key: "{{ .Values.sqlserver.username.secretKey }}"
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.sqlserver.password.secretName }}"
                  key: "{{ .Values.sqlserver.password.secretKey }}"
            - name: MONGO_DB_URL
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.mongodb.secretName }}"
                  key: "{{ .Values.mongodb.secretKey }}"
            - name: PIPELINE_SCRIPT  
              value: "{{ (index .Values.pipelines 0).script }}"  

          volumeMounts:
            - mountPath: /app/artifact
              name: artifact-storage

          resources:
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
            requests:
              memory: "{{ .Values.resources.requests.memory }}"

      volumes:
        - name: artifact-storage
          persistentVolumeClaim:
            claimName: my-app-pvc